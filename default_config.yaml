# --- Defaults ---

# --- Environment options ---
env_type: 'restricted'        # 'normal' or 'restricted' (-> requires visibility for firing)
board_size: 7             # size of the board
init_ammo: 5              # initial ammo of a tank
max_range: 5              # maximum firing range of a tank
step_penalty: 0.01        # penalty for taking a step
max_episode_length: 100   # maximum length of an episode
gamma: 0.8               # discount factor
fixed_init_position: True # start from fixed initial position for all agents?
n_friends: 2              # number of friends (team "blue")
n_enemies: 2              # number of enemies (team "red")
add_terrain: True         # add terrain information to input tensor

# --- Logging options ---
log_interval: 10          # logging rate
save_model: True          # Save the models to disk
save_model_interval: 500 # Save models after this many episodes
path: '/Programming/VKHO/agent_dumps/'

# --- general marl parameters
n_steps: 10000              # number of episodes to generate
gamma: 0.99               # discount factor

model: 'RNN'              # type of neural network: 'FORWARD' or 'RNN
n_hidden: 128             # number of hidden layers
lr: 0.0001                # learning rate for ADAM
normalize_states: False    # should state vectors be normalized?

# --- transfer learning
n_iterations: 5           # number of iterations for transfer learning
reset_model: False        # reset model of learners to random model        

# --- policy gradient parameters
beta: 0.01                # entropy loss coefficient
n_episodes_per_step: 25   # number of episodes to generate per update step

# --- q-learning parameters
scheduler: 'LinearScheduler'  # type of scheduler to use
scheduler_steps: 120000        # maximum number of steps before deactivating scheduler (reduced from 100000)
buffer_size: 1000              # size of the replay buffer
batch_size: 128              # number of samples from replay buffer per update (default = 128)
sync_interval: 100            # number of updates before syncing target model with current model
clip: 10                      # gradient clip rate

# --- QMix parameters
use_mixer: True               # use mixer?
mixer: 'QMIX'                 # type of mixer to use: 'VDN' or 'QMIX' or 'QMIX_NS'
qmix_ns: False                 # ablation: no conditioning an states
embed_dim: 64                 # embedding size of Q-mixer 